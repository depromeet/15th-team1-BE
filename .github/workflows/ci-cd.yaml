name: 어디로가는걸까

env:
  REGISTRY: "ghcr.io"
  NAMESPACE: "depromeet"
  IMAGE_NAME: "kasukabe-server"
  MODULE: "api"

on:
  push:
    branches:
      - chore/k8s

jobs:
  build:
    name: Build

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Setup Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0

      - name: Build layer-api module
        run: ./gradlew :layer-api:build

      - name: Run tests:layer-api
        run: ./gradlew :layer-api:test

      - name: docker arm64 build set up - qemu
        uses: docker/setup-qemu-action@v2

      - name: docker arm64 build set up - buildx
        uses: docker/setup-buildx-action@v2

      - name: login github container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
            images: ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}/${{ env.MODULE }}

      - name: push
        uses: docker/build-push-action@v4
        with:
          context: ./layer-api
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}/${{ env.MODULE }}:latest
            ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}/${{ env.MODULE }}:${{ github.run_id }}


  deploy:
    name: Production Deploy
    if: github.ref == 'refs/heads/chore/cicd'
    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Kubectl
        uses: azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Deploy
        run: |
             kubectl apply -f layer-api/k8s/development/deployment.yaml
