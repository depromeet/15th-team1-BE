plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

jar.enabled = false
bootJar.enabled = false

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

subprojects {
    group 'org.layer'
    version '0.0.1'
    sourceCompatibility = '17'

    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies { // 모든 하위 모듈에 추가 될 의존성 목록입니다.

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        testImplementation platform('org.junit:junit-bom:5.9.1')
        testImplementation 'org.junit.jupiter:junit-jupiter'

        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-web'

    }

    test {
        useJUnitPlatform()
    }
}

project(":layer-api") {
    version '0.0.1'
    dependencies {
        implementation project(path: ':layer-common')
        implementation project(path: ':layer-domain')
        implementation project(path: ':layer-external')


        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        //== jwt ==//
        implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
        runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
        runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

        // oauth2-client 라이브러리
        implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

        // redis
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'


        // swagger
        implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0")

        // jpa
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

        // mysql
        runtimeOnly 'com.mysql:mysql-connector-j'
    }

    jar.enabled = false
    bootJar.enabled = true
}

project(":layer-common") {
    bootJar.enabled = false
    jar.enabled = true

    dependencies {
        // swagger
        implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0")

        implementation 'org.springframework.boot:spring-boot-starter-web'
//		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    }

}


project(":layer-domain") {
    bootJar.enabled = false
    jar.enabled = true

    dependencies {
        implementation project(path: ':layer-common')
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

        // h2
        runtimeOnly 'com.h2database:h2'

        testImplementation platform('org.junit:junit-bom:5.9.1')
        testImplementation 'org.junit.jupiter:junit-jupiter'
    }
}

project(":layer-external") {
    bootJar.enabled = false
    jar.enabled = true

	dependencies {
		implementation project(path: ':layer-common')
		implementation project(path: ':layer-domain')

        testImplementation platform('org.junit:junit-bom:5.9.1')
        testImplementation 'org.junit.jupiter:junit-jupiter'
    }
}